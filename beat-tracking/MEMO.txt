https://www.badlogicgames.com/wordpress/?p=187
https://www.linkedin.com/pulse/elaboration-datas-using-fast-fourier-transform-nodejs-frediani

fftw-js
fft-windowing

http://www.fftw.org/fftw3_doc/The-Halfcomplex_002dformat-DFT.html#The-Halfcomplex_002dformat-DFT

fftw_plan_r2r_id ()

input   r0,,,,,,,rn/2
output  i(n+1)/2-1,,....., i2, i1
same size

hc[n] 
kth component real hc[k], imaginary  hc[n-k]
hc[0] = 0th (real only)
hc[n/2] = n/2 th (real only, if n is even)

fft-js の方が使いやすい? -- 遅すぎてだめ

Output:

node fft.js -s 44100 test/signal8.js

Signal:  [ 1, 1, 1, 1, 0, 0, 0, 0 ]

FFT:  [ 
[ 4, 0 ],
[ 1, -2.414213562373095 ],
[ 0, 0 ],
[ 1, -0.4142135623730949 ],
[ 0, 0 ],
[ 0.9999999999999999, 0.4142135623730949 ],
[ 0, 0 ],
[ 0.9999999999999997, 2.414213562373095 ] 
]

local averageを引く


File output

HTML5: FileSystem API
https://www.jotform.com/blog/html5-filesystem-api-create-files-store-locally-using-javascript-webkit/

js-file-download
https://github.com/kennethjiang/js-file-download

debug logging instead of console.log()

https://levelup.gitconnected.com/step-up-your-console-messaging-game-in-your-react-app-42eee17659ec
++++++++++++
BPM
 Comb-filter, autocorrelation, Fourier transform

tempogram

autocorrelation https://www.npmjs.com/package/autocorrelation

input array, output array
using fft-js
https://etudes.tibonihoo.net/literate_musing/autocorrelations.html

Original idea -- tap tempo (no update for out of range input)
44100/512 = 86.1 in 1 sec
8613 samples for 10 secs

Low pass filter (FIR) npm install fili https://www.npmjs.com/package/fili

++++++++++++

自己相関 -- 2回?

重み付き最小2乗
複数回帰直線の同時推定
Multiple linear regression with TensorFlow

bpm range 50 -- 240
60 bpm = 1.0 sec/beat
120 bpm = 0.5 sec/beat
240 bpm = 0.25 sec/beat

1 sample = 512/44100 = 0.01161 sec 5168bpm
20 samples: 258 bpm
100 sample: 51.7 bpm
sample range 20 -- 100

100 sample

++++++++++++++++
Wavelet 
https://mziccard.me/2015/05/28/beats-detection-algorithms-1/
https://mziccard.me/2015/06/12/beats-detection-algorithms-2/

4 coefficient wavelet family (DAUB4)

++++++++++++++++
マウスクリック -- ビート と 小節

+++++++++++++
PhD 2018 Dittmar DrumsSeparation

NMFD (Nonnegative matrix factor deconvolution)
Wiener Filtering and Kernel Additive Modeling

++++++++
Comb filter 5845......pdf or siteseer
REAL-TIME VISUAL BEAT TRACKING USING A COMB FILTER MATRIX (2016)

a bank of comb filter resonators.
the level of the tatum, defined by Bilmes [2] as the lowest metrical
level present in a piece, the beat level and the bar level.

In cases of syncopation whereby
one event occurs at a usually unstressed metrical level,

y t = αy t−T + (1 − α)x t . (period T)

By visualising aspects of the algorithmic process,

Following Eck [6], we make use of a ma-
trix structure which retains phase information and can be
used to represent multiple tempo and phase hypotheses in
a single image.

Figure 1. Onset detection function obtained processing a
recording of drum parts by Led Zeppelin’s John Bonham.
The median is the horizontal line through the middle of
the onsets. Both the raw detection function and the output
of pre-processing as described in section 2.1 are shown.

median -- of what? window of 512 samples (11.6msec)

matrix: tempo of period τ and phase θ by X(τ, θ ).

X(τ, θ τ,t ) ← αx t + (1 − α)X(τ, θ τ,t ).
range of t and theta?

1.3 to 4 bpm bin, 160 to 80 (narrow) 
alpha = 0.1

Modified
X(τ, θ τ,t ) ← αx(t)+(1−α) max{c τ (τ m )c θ (θ n )X(τ m , θ n )}
(4)
where c τ (·) and c θ (·) are weighting
c τ (τ m ) = g(τ, τ m , σ τ ), where τ m is the period of an ad-
jacent tempo, and c θ (θ n ) = g(θ , θ n , σ θ ),

g(t, m, σ ) = e ^{− (t−m) 2/2σ 2} (5)

We choose the values 3.5
and 6 for σ τ and σ θ , the standard deviation of the weight-
ing functions for tempo and phase respectively.


.

